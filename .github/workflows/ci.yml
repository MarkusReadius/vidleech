name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Install Qt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0
    
    - name: Install dependencies
      run: poetry install
    
    - name: Check formatting with Black
      run: poetry run black . --check
    
    - name: Check imports with isort
      run: poetry run isort . --check
    
    - name: Lint with flake8
      run: poetry run flake8
    
    - name: Run tests
      run: poetry run pytest

  build:
    needs: test
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
    
    - name: Install dependencies
      run: poetry install
    
    - name: Build executable
      run: |
        poetry run pyinstaller --name=vidleech --onefile --noconsole --clean --add-data "src/resources;resources" src/main.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vidleech-windows
        path: dist/vidleech.exe
